{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECTS\\\\spotify\\\\src\\\\Body.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./Body.css\";\nimport Header from \"./Header\";\nimport { useStateValue } from \"./StateProvider\";\nimport SongRow from \"./SongRow\";\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Body(_ref) {\n  _s();\n  let {\n    spotify\n  } = _ref;\n  const [{\n    discover_weekly\n  }, dispatch] = useStateValue();\n  const playPlaylist = id => {\n    spotify.play({\n      context_uri: `spotify:playlist:7gJcOiSAccU3ExTZsSgei3`\n    }).then(res => {\n      spotify.getMyCurrentPlayingTrack().then(r => {\n        dispatch({\n          type: \"SET_ITEM\",\n          item: r.item\n        });\n        dispatch({\n          type: \"SET_PLAYING\",\n          playing: true\n        });\n      });\n    });\n  };\n  const playSong = id => {\n    spotify.play({\n      uris: [`spotify:track:${id}`]\n    }).then(res => {\n      spotify.getMyCurrentPlayingTrack().then(r => {\n        dispatch({\n          type: \"SET_ITEM\",\n          item: r.item\n        });\n        dispatch({\n          type: \"SET_PLAYING\",\n          playing: true\n        });\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      spotify: spotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: discover_weekly === null || discover_weekly === void 0 ? void 0 : discover_weekly.images[0].url,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body__infoText\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"PLAYLIST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Discover Weekly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: discover_weekly === null || discover_weekly === void 0 ? void 0 : discover_weekly.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body__songs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body__icons\",\n        children: [/*#__PURE__*/_jsxDEV(PlayCircleFilledIcon, {\n          className: \"body__shuffle\",\n          onClick: playPlaylist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoreHorizIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), discover_weekly === null || discover_weekly === void 0 ? void 0 : discover_weekly.tracks.items.map(item => /*#__PURE__*/_jsxDEV(SongRow, {\n        playSong: playSong,\n        track: item.track\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Body, \"PSkaq+TR4FM0jlWZgpSkytTDuF0=\", false, function () {\n  return [useStateValue];\n});\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","Header","useStateValue","SongRow","PlayCircleFilledIcon","FavoriteIcon","MoreHorizIcon","Body","spotify","discover_weekly","dispatch","playPlaylist","id","play","context_uri","then","res","getMyCurrentPlayingTrack","r","type","item","playing","playSong","uris","images","url","description","tracks","items","map","track"],"sources":["D:/PROJECTS/spotify/src/Body.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./Body.css\";\r\nimport Header from \"./Header\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport SongRow from \"./SongRow\";\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\n\r\nfunction Body({ spotify }) {\r\n  const [{ discover_weekly }, dispatch] = useStateValue();\r\n\r\n  const playPlaylist = (id) => {\r\n    spotify\r\n      .play({\r\n        context_uri: `spotify:playlist:7gJcOiSAccU3ExTZsSgei3`,\r\n      })\r\n      .then((res) => {\r\n        spotify.getMyCurrentPlayingTrack().then((r) => {\r\n          dispatch({\r\n            type: \"SET_ITEM\",\r\n            item: r.item,\r\n          });\r\n          dispatch({\r\n            type: \"SET_PLAYING\",\r\n            playing: true,\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  const playSong = (id) => {\r\n    spotify\r\n      .play({\r\n        uris: [`spotify:track:${id}`],\r\n      })\r\n      .then((res) => {\r\n        spotify.getMyCurrentPlayingTrack().then((r) => {\r\n          dispatch({\r\n            type: \"SET_ITEM\",\r\n            item: r.item,\r\n          });\r\n          dispatch({\r\n            type: \"SET_PLAYING\",\r\n            playing: true,\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"body\">\r\n      <Header spotify={spotify} />\r\n\r\n      <div className=\"body__info\">\r\n        <img src={discover_weekly?.images[0].url} alt=\"\" />\r\n        <div className=\"body__infoText\">\r\n          <strong>PLAYLIST</strong>\r\n          <h2>Discover Weekly</h2>\r\n          <p>{discover_weekly?.description}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"body__songs\">\r\n        <div className=\"body__icons\">\r\n          <PlayCircleFilledIcon\r\n            className=\"body__shuffle\"\r\n            onClick={playPlaylist}\r\n          />\r\n          <FavoriteIcon fontSize=\"large\" />\r\n          <MoreHorizIcon />\r\n        </div>\r\n\r\n        {discover_weekly?.tracks.items.map((item) => (\r\n          <SongRow playSong={playSong} track={item.track} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}